---
import { getCollection } from "astro:content";
import { cn } from "@/lib/utils";
import Layout from "@/layouts/Layout.astro";
import Footer from "@/components/Footer.astro";
import PostItem from "@/components/PostItem.astro";
import FadeInElement from "@/components/FadeInElement.astro";

const posts = await getCollection("blog");

const postsByYear = posts
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .reduce(
    (acc, post) => {
      const year = new Date(post.data.date).getFullYear();
      if (!acc[year]) {
        acc[year] = [];
      }
      acc[year].push(post);
      return acc;
    },
    {} as Record<number, Awaited<ReturnType<typeof getCollection>>>
  );
---

<script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("click", event => {
    const target = event.target as HTMLElement;
    if (target && target.id === "back") {
      // Navigate directly without scrolling first
      navigate("/");
    }
  });
</script>

<Layout siteSubTitle="文章">
  <article class="flex flex-col gap-16">
    <header class="flex flex-col gap-8">
      <FadeInElement>
        <button
          id="back"
          class={cn(
            "relative px-4 py-1.5 text-xs tracking-wide",
            "bg-transparent text-zinc-500 dark:text-zinc-500",
            "border-2 border-zinc-200 dark:border-zinc-800 rounded-xl",
            "hover:bg-zinc-50/50 dark:hover:bg-zinc-800/30",
            "hover:border-zinc-300 dark:hover:border-zinc-700",
            "hover:text-zinc-700 dark:hover:text-zinc-400",
            "transition-all duration-300 cursor-pointer"
          )}
        >
          返回主页
        </button>
      </FadeInElement>
      <FadeInElement delay={200}>
        <p>目前已经写了 {posts.length} 篇文章，继续加油吧~~😊</p>
      </FadeInElement>
    </header>
    <main class="flex flex-col gap-16">
      {
        Object.entries(postsByYear)
          .sort(([a], [b]) => Number(b) - Number(a))
          .map(([year, posts], index) => (
            <FadeInElement delay={((index + 2) * 200) as 400 | 600 | 800 | 1000 | 1200 | 1400}>
              <section class="flex flex-col gap-4">
                <h2 class="mb-6 text-3xl font-light tracking-wide text-zinc-400 dark:text-zinc-500">
                  <span class="font-medium text-zinc-700 dark:text-zinc-300">{year}</span>
                </h2>
                <ul class="flex flex-col gap-4">
                  {posts.map(post => (
                    <PostItem id={post.id} data={post.data} />
                  ))}
                </ul>
              </section>
            </FadeInElement>
          ))
      }
    </main>
    <FadeInElement delay={1400}>
      <Footer />
    </FadeInElement>
  </article>
</Layout>
