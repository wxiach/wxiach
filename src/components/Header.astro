---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<header
  class="w-full p-4 backdrop-blur-xl border-b border-black/5 dark:border-white/5 sticky top-0"
>
  <div class="flex justify-between items-center">
    <a href="/"><h1 class="text-xl font-bold">{title}</h1></a>
    <div class="flex items-center gap-4">
      <a href="">Github</a>
      <a href="">Twitter</a>
      <div
        transition:persist
        id="toggle-color-scheme"
        class="h-5 w-5 cursor-pointer"
      >
      </div>
    </div>
  </div>

  <script>
    const initialColorScheme = () => {
      const DARK_MODE_QUERY = "(prefers-color-scheme: dark)";
      const systemPrefersDark = window.matchMedia(DARK_MODE_QUERY).matches;

      const userPrefersDark =
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) && systemPrefersDark);
      document.documentElement.classList[userPrefersDark ? "add" : "remove"](
        "dark",
      );
    };

    initialColorScheme();
    document.addEventListener("astro:after-swap", initialColorScheme);

    const toggleColorScheme = () => {
      const isDark = document.documentElement.classList.contains("dark");

      document.documentElement.classList.toggle("dark");
      localStorage.theme = isDark ? "light" : "dark";
    };

    const button = document.getElementById("toggle-color-scheme");
    button?.addEventListener("click", toggleColorScheme);
  </script>

  <style>
    #toggle-color-scheme {
      background-image: url(../assets/moon.svg);
      background-size: 100%;
      background-repeat: no-repeat;
      background-position: center;
    }

    html.dark #toggle-color-scheme {
      background-image: url(../assets/sun.svg);
    }
  </style>
</header>
